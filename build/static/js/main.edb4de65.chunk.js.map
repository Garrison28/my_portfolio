{"version":3,"sources":["carousel/Carousel.jsx","App.jsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","carousel","display","flexDirection","justifyContent","alignItems","carouselImage","height","width","borderStyle","borderColor","name","color","prevItem","nextItem","carouselContent","Carousel","props","classes","useState","carouselIndex","setCarouselIndex","current","setCurrent","useEffect","items","className","onClick","length","src","image","home","prompt","button","backgroundColor","Profile","href","id","target","Button","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.edb4de65.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    carousel: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    carouselImage: {\n        height: '50vh',\n        width: '50vw',\n        borderStyle: 'solid',\n        borderColor: '#2E88D1',\n    },\n    name: {\n        color: 'black',\n    },\n    prevItem:{\n        color: 'black',\n    },\n    nextItem:{\n        color: 'black',\n    },\n    carouselContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    }\n\n})\n\nconst Carousel = (props) => {\n    const classes = useStyles()\n    const [carouselIndex, setCarouselIndex] = useState(0);\n    const [current, setCurrent] = useState({});\n\n    useEffect(() => {\n        setCurrent(props.items[carouselIndex])\n    })\n\n    const nextItem = () => {\n        if (carouselIndex >= props.items.length - 1) {\n            setCarouselIndex(0)\n        }\n        else {\n            setCarouselIndex(carouselIndex + 1)\n        }\n        setCurrent(props.items[carouselIndex])\n    }\n\n    const prevItem = () => {\n        if ( carouselIndex > 0) {\n            setCarouselIndex(carouselIndex - 1)\n        }\n        else {\n            setCarouselIndex(props.items.length - 1)\n        }\n        setCurrent(props.items[carouselIndex])\n    }\n\n    const handleClick = () => {\n        props.updateData(current.name)\n        props.updateImage(current.image)\n    }\n\n    return (\n        <div className={classes.carousel}>\n            <ChevronLeftIcon className={classes.prevItem} onClick={prevItem} />\n            <div className={classes.carouselContent}>\n                <h4 className={classes.name}>{current.name}</h4>\n                <img className={classes.carouselImage} src={current.image} />\n            </div>\n            <ChevronRightIcon className={classes.nextItem} onClick={nextItem} />\n        </div>\n    )\n}\n\nexport default Carousel;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport Carousel from './carousel/Carousel';\nimport { makeStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst useStyles = makeStyles({\n  home: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  prompt: {\n    color: 'black',\n  },\n  button: {\n    width: '50vw',\n    height: '10vh',\n    backgroundColor: '#2E88D1',\n  }\n\n})\n\nfunction Profile(props) {\n  const classes = useStyles()\n  const projectOne = [\n\n    {\n      name: 'Gold',\n      image: '/img/Gold.png'\n    },\n    {\n      name: 'Level Cleared',\n      image: '/img/GoldLevelClear.png'\n    }\n  ]\n\n  const projectTwo = [\n    {\n      name: 'ArtistGO!',\n      image: '/img/ArtistGoHome.png'\n    },\n    {\n      name: 'Home Page',\n      image: '/img/ArtistGoMainPage.png'\n    },\n    {\n      name: 'Search Page',\n      image: '/img/ArtistGoSearch.png'\n    },\n    {\n      name: 'Favorite Artist Page',\n      image: '/img/ArtistGoMyArtist.png'\n    }\n  ]\n\n  const projectThree = [\n    {\n      name: 'Stuter',\n      image: '/img/StuterLoginPage.png'\n    },\n    {\n      name: 'Stuter Dashboard',\n      image: '/img/StuterDashboard.png'\n    },\n    {\n      name: 'Stuter Subjects',\n      image: '/img/StuterSubjects.png'\n    },\n    {\n      name: 'Stuter Tutors',\n      image: '/img/StuterTutor.png'\n    }\n  ]\n\n  const projectFour = [\n    {\n      name: 'The Photo',\n      image: '/img/ThePhotoHome.png'\n    },\n    {\n      name: 'The Photo Categories',\n      image: '/img/ThePhotoCategories.png'\n    },\n    {\n      name: 'The Photo Photos',\n      image: '/img/ThePhotoPhotos.png'\n    }\n  ]\n\n  return (\n    <>\n      <div className=\"container bkgrd-img\">\n        <header>\n          <div className=\"nav-bar card\">\n            <nav>\n              <a href=\"#about-me\" >About</a>{' | '}\n              <a href=\"#my-projects\">Projects</a>{' | '}\n              <a href=\"#contact-me\">Contact</a>{' | '}\n            </nav>\n          </div>\n        </header>\n        <body>\n          <div className=\"contents\">\n            <div id=\"about-me\" className=\"about\">\n              <h1>About</h1>\n              <div className=\"card-one\">\n                <p>My name is Garrison, A jazz musician turned full stack web developer. I enjoy finding creative solutions that require out of the box thinking for out of the box problems. Being a jazz musician allows you to think in a more lateral way, especially during improvisation; this is a transferable skill that would allow to look at certain problems in development.</p>\n              </div>\n\n            </div>\n            <div id=\"my-projects\" className=\"project\">\n              <h1 className=\"\">Projects</h1>\n              <div className=\"\">\n                <h3 className=\"card\">Project 1</h3>\n                <div className={classes.home}>\n                  <Carousel items={projectOne}\n                  /><br />\n                  <p>Get all the gold pieces before the enemies Get to you.</p>\n                  <a href=\"https://garrison28.github.io/Gold/\" target=\"_blank\">\n                    <Button className={classes.button}>Play the Game!</Button>\n                  </a><br/>\n                  <a href=\"https://github.com/Garrison28/Gold\" target=\"_blank\">\n                    <Button className={classes.button}>Github Repo</Button>\n                  </a>\n                </div>\n              </div>\n\n              <div className=\"\">\n                <h3 className=\"card\">Project 2</h3>\n                <div className={classes.home}>\n                  <Carousel items={projectTwo}\n                  /><br />\n                  <p></p>\n                  <a href=\"https://morning-cliffs-87357.herokuapp.com/\" target=\"_blank\">\n                    <Button className={classes.button}>Go to ArtistGO!</Button>\n                  </a><br/>\n                  <a href=\"https://github.com/Garrison28/my-Travel-Fest\" target=\"_blank\">\n                    <Button className={classes.button}>Github Repo</Button>\n                  </a>\n                </div>\n                \n              </div>\n              <div className=\"\">\n                <h3>Project 3</h3>\n                <div className={classes.home}>\n                  <Carousel items={projectThree}\n                  /><br />\n                  <a href=\"https://polar-sands-42976.herokuapp.com/\" target=\"_blank\">\n                    <Button className={classes.button}>Go Stuter!</Button>\n                  </a><br/>\n                  <a href=\"https://github.com/Garrison28/stuter\" target=\"_blank\">\n                    <Button className={classes.button}>Github Repo</Button>\n                  </a>\n                </div>\n\n              </div>\n              <div className=\"\">\n                <h3>Project 4</h3>\n                <div className={classes.home}>\n                  <Carousel items={projectFour}\n                  /><br />\n                  <a href='https://secret-ridge-94962.herokuapp.com' target=\"_blank\">\n                    <Button className={classes.button}>Go The Photo!</Button>\n                  </a><br/>\n                  <a href=\"https://github.com/Garrison28/The-Photo\" target=\"_blank\">\n                    <Button className={classes.button}>Github Repo</Button>\n                  </a>\n                </div>\n\n              </div>\n            </div>\n            <div id=\"contact-me\" className=\"card\">\n              <h2>Contact</h2>\n              <span>Email: ghighsmith28@gmail.com</span>{' | '}\n              <span>Linkdin: <a href='https://www.linkedin.com/in/garrison-highsmith' target=\"_blank\"> My Linkdin</a></span>{' | '}\n              <span>Github: <a href='https://github.com/Garrison28' target=\"_blank\"> My Github<i></i></a></span>\n              <div>\n\n              </div>\n              <div>\n\n              </div>\n            </div>\n          </div>\n        </body>\n        <footer>\n\n        </footer>\n      </div>\n    </>\n  )\n}\n\n\nexport default Profile;\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}